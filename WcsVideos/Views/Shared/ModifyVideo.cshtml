@model VideoModifyViewModel

<div class="col-md-6">
    <div class="panel panel-primary">
        <div class="panel-heading">
            Original Video Details
        </div>
        <div class="panel-body">
            @Html.Raw(this.Model.Existing.EmbedCode)
        <table class="table" style="margin-bottom:0px">
            <thead>
                <tr>
                    <td colspan="2">
                        @this.Model.Existing.Title
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        Event
                    </td>
                    <td>
                        @if (string.IsNullOrEmpty(this.Model.Existing.EventUrl))
                        {
                            @this.Model.Existing.EventName
                        }
                        else
                        {
                            <a href="@this.Model.Existing.EventUrl">@this.Model.Existing.EventName</a>
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        Level
                    </td>
                    <td>
                        @this.Model.Existing.SkillLevel
                    </td>
                </tr>
                <tr>
                    <td>
                        Category
                    </td>
                    <td>
                        @this.Model.Existing.DanceCategory
                    </td>
                </tr>
                <tr>
                    <td rowspan="@Math.Max(1, this.Model.Existing.Dancers.Count)">
                        Dancers
                    </td>
                    <td>
                        @if (this.Model.Existing.Dancers.Count >= 1)
                        {
                            var dancer = this.Model.Existing.Dancers[0];
                            <a href="@dancer.Url">@dancer.DisplayName</a>
                        }
                        else
                        {
                            <text>(None)</text>
                        }
                    </td>
                </tr>
                @foreach (var dancer in this.Model.Existing.Dancers.Skip(1)) {
                <tr>
                    <td>
                        <a href="@dancer.Url">@dancer.DisplayName</a>
                    </td>
                </tr>                        
                }
            </tbody>
        </table>
        </div>
    </div>
</div>
<div class="col-md-6">
    <div class="panel panel-primary">
        <div class="panel-heading">
            Updated Video Details
        </div>
        <div class="panel-body">
            <input type="hidden" name="videoId" value="@this.Model.VideoId">
            <div class="form-group @(this.Model.TitleValidationError ? "has-error" : "")">
                <label for="title" class="control-label">Video Title</label>
                <input type="text" class="form-control" name="title" id="title" value="@this.Model.Title">
                @if (this.Model.TitleValidationError)
                {
                    <p class="help-block">
                        The video title must not be blank.
                    </p>
                }
            </div>
            <div class="form-group">
                <label for="skillLevelId" class="control-label">Level</label>
                <select class="form-control" name="skillLevelId" id="skillLevelId">
                    <option value="">(None)</option>
                    @foreach (KeyValuePair<string, string> entry in SkillLevel.DisplayNames.OrderBy(e => SkillLevel.GetOrder(e.Key)))
                    {
                        @if (string.Equals(this.Model.SkillLevelId, entry.Key, StringComparison.Ordinal))
                        {
                            <option value="@(entry.Key)" selected="selected">@entry.Value</option>
                        }
                        else
                        {
                            <option value="@(entry.Key)">@entry.Value</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="danceCategoryId" class="control-label">Category</label>
                <select class="form-control" name="danceCategoryId" id="danceCategoryId">
                    <option value="">(None)</option>
                    @foreach (KeyValuePair<string, string> entry in DanceCategory.DisplayNames.OrderBy(e => DanceCategory.GetOrder(e.Key)))
                    {
                        @if (string.Equals(this.Model.DanceCategoryId, entry.Key, StringComparison.Ordinal))
                        {
                            <option value="@(entry.Key)" selected="selected">@entry.Value</option>
                        }
                        else
                        {
                            <option value="@(entry.Key)">@entry.Value</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group @(this.Model.DancerIdListValidationError ? "has-error" : "")">
                <label for="dancerIdList" class="control-label">Dancers</label>
                <p class="form-control-static" id="dancerNameList">@this.Model.DancerNameList</p>
                <input type="hidden" name="dancerIdList" id="dancerIdList" value="@this.Model.DancerIdList">
                @if (this.Model.DancerIdListValidationError)
                {
                    <p class="help-block">
                        Must contain valid WSDC IDs, semi-colon (;) separated.
                    </p>
                }
            </div>
            <div class="form-group">
                <a role="button" class="btn btn-default" id="findDancerLink" href="javascript:void(0)">
                    <span class="glyphicon glyphicon-plus-sign"> </span> add dancer
                </a>
                &nbsp; or &nbsp;
                <a role="button" class="btn btn-default" id="clearDancerLink" href="javascript:void(0)">
                    <span class="glyphicon glyphicon-remove-sign"> </span> clear dancers
                </a>
            </div>
            <div>
                <div style="display:none;" class="panel panel-default" id="findDancerPanel">
                    <div class="panel-heading">
                        Dancer Search
                    </div>
                    <div class="panel-body">
                        <p>
                            <input type="text" class="form-control" name="dancerQuery" id="dancerQuery">
                        </p>
                        <div id="dancerSearchResults">
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group @(this.Model.EventIdValidationError ? "has-error" : "")">
                <label for="dancerIdList" class="control-label">Event</label>
                <p class="form-control-static" id="eventName">@this.Model.EventName</p>
                <input type="hidden" name="eventId" id="eventId" value="@this.Model.EventId">
                @if (this.Model.EventIdValidationError)
                {
                    <p class="help-block">
                        Must contain valid WSDC IDs, semi-colon (;) separated.
                    </p>
                }
            </div>
            <div class="form-group">
                <a role="button" class="btn btn-default" id="findEventLink" href="javascript:void(0)">
                    <span class="glyphicon glyphicon-plus-sign"> </span> select event
                </a>
                &nbsp; or &nbsp;
                <a role="button" class="btn btn-default" id="clearEventLink" href="javascript:void(0)">
                    <span class="glyphicon glyphicon-remove-sign"> </span> remove event
                </a>
            </div>
            <div>
                <div style="display:none;" class="panel panel-default" id="findEventPanel">
                    <div class="panel-heading">
                        Event Search
                    </div>
                    <div class="panel-body">
                        <p>
                            <input type="text" class="form-control" name="eventQuery" id="eventQuery">
                        </p>
                        <div id="eventSearchResults">
                        </div>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-default">Submit</button>
        </div>
    </div>
</div>