<div class="row">
    <div class="col-md-12">
        <h2>
            Add Video
        </h2>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <form class="form-horizontal" role="form" method="post" action="/Videos/SubmitAdd" id="addform">
            <div class="form-group @(this.Model.TitleValidationError ? "has-error" : "")">
                <label for="title" class="col-sm-2 control-label">Video Title</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" name="title" id="title" value="@this.Model.Title">
                </div>
                @if (this.Model.TitleValidationError)
                {
                    <p class="help-block col-sm-offset-2 col-sm-10">
                        The video title must not be blank.
                    </p>
                }
            </div>
            <div class="form-group">
                <label for="providerId" class="col-sm-2 control-label">Provider</label>
                <div class="col-sm-10">
                    <select name="providerId" class="form-control" id="providerId">
                        <option value="youtube">YouTube</option>
                    </select>
                </div>
            </div>
            <div class="form-group @(this.Model.ProviderVideoIdValidationError ? "has-error" : "")">
                <label for="providerVideoId" class="col-sm-2 control-label">Video ID</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" name="providerVideoId" id="providerVideoId" value="@this.Model.ProviderVideoId">
                </div>
                @if (this.Model.ProviderVideoIdValidationError)
                {
                    <p class="help-block col-sm-offset-2 col-sm-10">
                        The video ID must correspond to an actual video for the provider.
                    </p>
                }
            </div>
            <div class="form-group @(this.Model.DancerIdListValidationError ? "has-error" : "")">
                <label for="dancerIdList" class="col-sm-2 control-label">Dancers</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" name="dancerIdList" id="dancerIdList" value="@this.Model.DancerIdList">
                </div>
                @if (this.Model.DancerIdListValidationError)
                {
                    <p class="help-block col-sm-offset-2 col-sm-10">
                        Must contain valid WSDC IDs, semi-colon (;) separated.
                    </p>
                }
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <a id="findDancerLink" href="#">find dancer</a>
                </div>
            </div>
            <div style="display:none;" id="findDancerPanel">
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        <input type="text" class="form-control" name="query" id="query">
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10" id="results">
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-default">Submit</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts
{
    <script>
        $(function() {
            var timer;
            var delay = 250; // 250 millisecond delay
            var jqxhr;
            
            function requestData()
            {
                searchForDancer($("#query").val(), 0);
            };
                        
            $("#query").on(
                "input",
                function() {
                    clearTimeout(timer);
                    timer = setTimeout(requestData, delay);

                    // abort any previous request which is in progress
                    if (jqxhr)
                    {
                        jqxhr.abort();
                        jqxhr = null;
                    }
                }
            );
            
            $("#findDancerLink").on(
                "click",
                function() {
                    $("#findDancerPanel").toggle();
                }
            );
        });
        
        function addDancer(dancer)
        {
            var dancerIds = $("#dancerIdList").val();
            if (dancerIds && dancerIds.length)
            {
                if (!dancerIds.charAt(dancerIds.length - 1) != ';')
                {
                    dancerIds += ";";
                }
                
                dancerIds += dancer;
            }
            else
            {
                dancerIds = dancer;
            }
            
            $("#dancerIdList").val(dancerIds);
        };
        
        function searchForDancer(query, start)
        {
            jqxhr = $.ajax({
                method: "GET",
                url: "/Videos/DancerSearchResults",
                data: { query: query, start: start }
            });
            
            jqxhr.done(
                function(data) {
                    $("#results").html(data);
                });
        }
    </script>
}
